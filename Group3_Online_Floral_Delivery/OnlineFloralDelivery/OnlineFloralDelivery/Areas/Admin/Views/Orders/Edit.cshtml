@model OnlineFloralDelivery.Models.Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit Order</h1>
                    <h5 style="color:red">@ViewBag.Error</h5>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="~/Admin/">Admin</a></li>
                        <li class="breadcrumb-item"><a href="~/Admin/Orders/">Orders</a></li>
                        <li class="breadcrumb-item active">Edit Order</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">

                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title">Edit Order</h3>
                        </div>
                        @using (Html.BeginForm("Edit", "Orders", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.OrderID)
                                <div class="card-body">
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Customer.FirstName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Customer.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Customer.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.PaymentID, "PaymentID", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("PaymentID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.PaymentID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Recipient, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Recipient, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Recipient, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.CreationDate, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.CreationDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.CreationDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ShippingDate, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.ShippingDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.ShippingDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @{
                                                    var selectListStatus = new SelectList(
                                                        new List<SelectListItem>
                                                        {
                                                            new SelectListItem {Text = "Processing", Value = "0"},
                                                            new SelectListItem {Text = "Shipping", Value = "1"},
                                                            new SelectListItem {Text = "Completed", Value = "2"},
                                                            new SelectListItem {Text = "Canceled", Value = "-1"},}, "Value", "Text");
                                                }
                                                @Html.DropDownListFor(model => model.Status, selectListStatus, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>



                                </div>

                                <div class="card-footer">
                                    <button type="submit" class="btn btn-success">Save</button>
                                    <button type="reset" class="btn btn-default float-right" onclick="window.location = '../'">Cancel</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>