@model OnlineFloralDelivery.Models.Blog

@{
    ViewBag.Title = "Edit";
}

<div class="content-wrapper">
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit Blogs</h1>
                    <h5 style="color:red">@ViewBag.Error</h5>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="~/Admin/">Admin</a></li>
                        <li class="breadcrumb-item"><a href="~/Admin/Blogs/">Blogs</a></li>
                        <li class="breadcrumb-item active">Edit Blogs</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">

                    <div class="card card-info">
                        <div class="card-header">
                            <h3 class="card-title">Edit Blog</h3>
                        </div>
                        @using (Html.BeginForm("Edit", "Blogs", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.BlogID)
                                <div class="card-body">
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.BlogName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                                        <div class="col-sm-10">
                                            @Html.EditorFor(model => model.BlogName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Blog Name" } })
                                            @Html.ValidationMessageFor(model => model.BlogName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model.Content, new { @id = "summernote" })
                                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.Label("Blog category name", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("BlogCategoriesID", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.BlogCategoriesID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <input type="datetime-local" class="form-control" value="@Html.DisplayFor(modelItem => modelItem.Date)" name="Date" />
                                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" name="ImageFile" id="ImageFile">
                                                <label class="custom-file-label" for="customFile">Choose file</label>
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="imageOldFile" value="@Session["OldImage_User"]" />

                                </div>

                                <div class="card-footer">
                                    <button type="submit" class="btn btn-success">Save</button>
                                    <button type="reset" class="btn btn-default float-right" onclick="window.location = '../'">Cancel</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section ScriptConfig
{
    <script src="~/Assets/admin/plugins/summernote/summernote-bs4.min.js"></script>
    <link href="~/Assets/admin/plugins/summernote/summernote-bs4.min.css" rel="stylesheet" />
    <script src="~/Assets/admin/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script>
        $(function () {
            $('#summernote').summernote()
        })

    </script>
}