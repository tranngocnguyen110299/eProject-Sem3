@model OnlineFloralDelivery.Models.Customer
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

    <div class="content-wrapper">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>Edit Customer</h1>
                        <h5 style="color:red">@ViewBag.Error</h5>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="~/Admin/">Admin</a></li>
                            <li class="breadcrumb-item"><a href="~/Admin/Customer/">Customer</a></li>
                            <li class="breadcrumb-item active">Edit Customer</li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>

        @using (Html.BeginForm("Edit", "Customer", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <div class="card-body">
                    @Html.Hidden("Username", Model.Username)

                    <div class="form-group row">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last Name" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.Label("Status", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @{
                                        var selectListStatus = new SelectList(
                                            new List<SelectListItem>
                                            {
                                                            new SelectListItem {Text = "Active", Value = "true"},
                                                            new SelectListItem {Text = "Disable", Value = "false"},}, "Value", "Text");
                                    }
                                    @Html.DropDownList("status", selectListStatus, htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-footer">
                        <button type="submit" class="btn btn-success">Create</button>
                        <button type="reset" class="btn btn-default float-right" onclick="window.location = '../'">Cancel</button>
                    </div>
                </div>
      
        }


    </div>
@section ScriptConfig
{
    <link href="~/Assets/Admin/plugins/daterangepicker/daterangepicker.css" rel="stylesheet" />
    <script src="~/Assets/Admin/plugins/daterangepicker/daterangepicker.js"></script>
    <script src="~/Assets/Admin/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>

}