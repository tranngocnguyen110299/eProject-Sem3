@model OnlineFloralDelivery.Models.Customer

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="checkout spad">
    <div class="container">
        <div class="col-sm-12">
            <h2 style="text-align:center; color:gray">REGISTER</h2>
            <h3 style="color:red">@TempData["ErrorMess"]</h3>
            <h3 style="color:green">@TempData["SuccessMess"]</h3>
            <hr />
        </div>
        @using (Html.BeginForm("Index", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group row">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Username", @id = "txtUsername_In_Client" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        <div style="color:red" ; id="txtUsername_In_Client"></div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter First Name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Last Name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Enter Password", @id = "txtPassword_In_Client" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        <div style="color:red" ; id="txtPassword_In_Client"></div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Enter Confirm Password", @id = "txtPassword_In_Client" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="width: 100%;">
                        @Html.RadioButtonFor(model => model.Gender, true, new { Checked = "checked" })
                        <span>Male</span>&emsp;&emsp;
                        @Html.RadioButtonFor(model => model.Gender, false)
                        <span>Female</span>
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div style="padding:5px"></div>
                <div class="form-group row">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control oso", @type = "date" } })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Phone Number" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Email", @id = "txtEmail_In_Manage" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        <div style="color:red" ; id="txtEmail_In_Manage"></div>
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Address" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                    <div class="col-sm-10">
                        <div class="custom-file">
                            <input type="file" class="form-control" name="ImageFile" id="ImageFile" required>
                            @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div style="padding:20px"></div>
                <div class="form-group row">
                    <div class="col-sm-12">
                        <button type="button" style="background-color:deepskyblue;" class="btn btn-success site-btn float-right" id="btn-cancel">Cancel</button>
                        <button type="submit" style="background-color:green;" class="btn btn-success site-btn float-right">Register</button>
                    </div>
                </div>
            </div>
        }

    </div>
</section>


<style>
    .form-control {
        height: 50px;
        width: 100%;
        border: 1px solid #e1e1e1;
        border-radius: 2px;
        margin-bottom: 25px;
        font-size: 14px;
        padding-left: 20px;
        color: #666666;
    }
</style>
@section ClientScript{
    <script>
        $(document).ready(function () {
            $("#btn-cancel").click(function () {
                window.location = "/home";
            });
        });

        //validation username
        $(document).ready(function () {
            $("#txtUsername_In_Client").keyup(function () {
                $.ajax({
                    type: "POST",
                    url: '/Controllers/Values/CheckUsername',
                    data: {
                        username: $(this).val()
                    },
                    cache: false,
                    datatype: "json",
                }).done(function (data) {
                    $("#notice_is_valid_username").empty();
                    $("#notice_is_valid_username").append(data);
                });
            });
        });
        // validation password
        $(document).ready(function () {
            $("#txtPassword_In_Client").keyup(function () {
                $.ajax({
                    type: "POST",
                    url: '/Controllers/Values/CheckPassword',
                    data: {
                        password: $(this).val()
                    },
                    cache: false,
                    datatype: "json",
                }).done(function (data) {
                    $("#notice_is_valid_password").empty();
                    $("#notice_is_valid_password").append(data);
                });
            });
        });
        // validation email
        $(document).ready(function () {
            $("#txtEmail_In_Manage").keyup(function () {
                $.ajax({
                    type: "POST",
                    url: '/Values/CheckEmail',
                    data: {
                        emailAddress: $(this).val()
                    },
                    cache: false,
                    datatype: "json",
                }).done(function (data) {
                    $("#notice_is_valid_email").empty();
                    $("#notice_is_valid_email").append(data);
                });
            });
        });

    </script>


}